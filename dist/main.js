(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const t=function(){function t(e){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=function(e){if("Escape"===e.key){var t=document.querySelector(".pop-up_opened");o.close(t)}},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popupSelector=e,this._popup=document.querySelector(e)}var n,r;return n=t,(r=[{key:"open",value:function(){this._popup.classList.add("pop-up_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("pop-up_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".pop-up__close-button").addEventListener("click",(function(){e.close()})),this._popup.querySelector(".pop-up__overlay").addEventListener("click",(function(){e.close()}))}}])&&e(n.prototype,r),t}();function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return(o="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e,t){return!t||"object"!==n(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var a=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(p,e);var t,n,a,c,s=(a=p,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(a);if(c){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return u(this,e)});function p(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(n=s.call(this,e))._submitForm=t,n._inputs=Array.from(n._popup.querySelectorAll(".pop-up__input")),n}return t=p,(n=[{key:"_getInputValues",value:function(){var e=this;return this._values={},this._inputs.forEach((function(t){e._values[t.name]=t.value})),this._values}},{key:"setEventListeners",value:function(){o(l(p.prototype),"setEventListeners",this).call(this),this._formElement=this._popup.querySelector(".pop-up__container"),this._popup.addEventListener("submit",this._submitForm)}},{key:"close",value:function(){o(l(p.prototype),"close",this).call(this),this._formElement.reset()}}])&&r(t.prototype,n),p}(t);function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImageContainer=t._popup.querySelector(".pop-up_container_type_image"),t._popupTitle=t._popup.querySelector(".pop-up__image-title"),t}return t=u,(n=[{key:"open",value:function(e,t){p(y(u.prototype),"open",this).call(this),this._popupImageContainer.src=e,this._popupImageContainer.alt=t,this._popupTitle.textContent=t}}])&&s(t.prototype,n),u}(t);function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const d=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._image=t.link,this._text=t.name,this._cardSelector=n,this._handleCardClick=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"render",value:function(){return this._newCard=this._getTemplate(),this._cardImage=this._newCard.querySelector(".element__image"),this._cardTitle=this._newCard.querySelector(".element__title"),this._cardImage.src=this._image,this._cardImage.alt=this._image,this._cardTitle.textContent=this._text,this._setEventListeners(),this._newCard}},{key:"_toggleLike",value:function(){this._newCard.querySelector(".element__like-button").classList.toggle("element__like-button_clicked")}},{key:"_deleteCard",value:function(){this._newCard.remove(),this._newCard=null}},{key:"_setEventListeners",value:function(){var e=this;this._newCard.querySelector(".element__delete-button").addEventListener("click",(function(t){e._deleteCard(t.target)})),this._newCard.querySelector(".element__like-button").addEventListener("click",(function(t){e._toggleLike(t.target.closest(".element__like-button"))})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._image,e._text)}))}}])&&m(t.prototype,n),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const b=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);this._toggleButtonState(t,n),t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(t,n)}))}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?t.classList.add(this._inactiveButtonClass):t.classList.remove(this._inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&v(t.prototype,n),e}();var S=document.querySelector(".pop-up_type_image"),g=(S.querySelector(".pop-up__image-title"),S.querySelector(".pop-up_container_type_image"),{formSelector:".pop-up__container",inputSelector:".pop-up__input",submitButtonSelector:".pop-up__submit-button",inactiveButtonClass:"pop-up__submit-button_type_disabled",inputErrorClass:"pop-up__input_type_error",errorClass:"pop-up__error_element_type_active"});function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const E=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._containerElement=document.querySelector(n)}var t,n;return t=e,(n=[{key:"rendererItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._containerElement.prepend(e)}}])&&k(t.prototype,n),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){var n=t.profileTitleSelector,r=t.profileSubtitleSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileTitleSelector=n,this._profileSubtitleSelector=r,this._profileTitle=document.querySelector(this._profileTitleSelector),this._profileSubtitle=document.querySelector(this._profileSubtitleSelector)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userData={nameData:this._profileTitle.textContent,infoData:this._profileSubtitle.textContent},this._userData}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.info;this._profileTitle.textContent=t.value,this._profileSubtitle.textContent=n.value}}])&&w(t.prototype,n),e}(),q=".template-element",O=document.querySelector(".pop-up__form_type_add-card"),L=O.querySelector(".pop-up__input_type_name"),j=O.querySelector(".pop-up__input_type_image-link"),I=document.querySelector(".pop-up__form_type_edit-profile"),P=document.querySelector(".pop-up__form_type_add-card"),T=new b(g,I),x=new b(g,P);T.enableValidation(),x.enableValidation();var R=document.querySelector(".elements"),D=new E({items:[{name:"Бали",link:"https://cdn.pixabay.com/photo/2020/10/09/20/09/library-5641389_960_720.jpg"},{name:"Кения ",link:"https://cdn.pixabay.com/photo/2020/10/09/20/09/library-5641389_960_720.jpg"},{name:"Лиссабон",link:"https://cdn.pixabay.com/photo/2020/10/09/20/09/library-5641389_960_720.jpg"},{name:"Невада",link:"https://cdn.pixabay.com/photo/2020/10/09/20/09/library-5641389_960_720.jpg"},{name:"Сиракузы ",link:"https://cdn.pixabay.com/photo/2020/10/09/20/09/library-5641389_960_720.jpg"},{name:"Стокгольм",link:"https://cdn.pixabay.com/photo/2020/10/09/20/09/library-5641389_960_720.jpg"}],renderer:function(e){var t=new d(e,q,V).render();D.addItem(t)}},".elements");D.rendererItems();var B=new h(".pop-up_type_image");function V(e,t){B.open(e,t)}B.setEventListeners();var U=new C({profileTitleSelector:".profile__title",profileSubtitleSelector:".profile__subtitle"}),A=document.querySelector(".pop-up__input_type_name"),F=document.querySelector(".pop-up__input_type_description"),M=new a(".pop-up-profile",(function(){U.setUserInfo({name:A,info:F}),M.close()})),N=document.querySelector(".profile__edit-button");M.setEventListeners(),N.addEventListener("click",(function(){A.value=U.getUserInfo().nameData,F.value=U.getUserInfo().infoData,M.open()}));var z=new a(".pop-up-place",(function(){var e={name:L.value,link:j.value},t=new d(e,q,V);R.prepend(t.render()),z.close()}));z.setEventListeners(),document.querySelector(".profile__add-button").addEventListener("click",(function(){z.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy91dGlscy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6WyJwb3B1cFNlbGVjdG9yIiwiZXZ0Iiwia2V5IiwidGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2xvc2UiLCJ0aGlzIiwiX3BvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRGb3JtIiwiX3N1Ym1pdEZvcm0iLCJfaW5wdXRzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl92YWx1ZXMiLCJmb3JFYWNoIiwiaW5wdXQiLCJuYW1lIiwidmFsdWUiLCJfZm9ybUVsZW1lbnQiLCJyZXNldCIsIlBvcHVwIiwiUG9wdXBXaXRoSW1hZ2UiLCJfcG9wdXBJbWFnZUNvbnRhaW5lciIsIl9wb3B1cFRpdGxlIiwiaW1hZ2UiLCJ0ZXh0Iiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJDYXJkRGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsIl9pbWFnZSIsImxpbmsiLCJfdGV4dCIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9uZXdDYXJkIiwiX2dldFRlbXBsYXRlIiwiX2NhcmRJbWFnZSIsIl9jYXJkVGl0bGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJ0b2dnbGUiLCJfZGVsZXRlQ2FyZCIsIl90b2dnbGVMaWtlIiwiY2xvc2VzdCIsIm9iamVjdCIsImZvcm1FbGVtZW50IiwiX2Zvcm1TZWxlY3RvciIsImZvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiaW5wdXRMaXN0IiwiYnV0dG9uRWxlbWVudCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfaGFzSW52YWxpZElucHV0Iiwic29tZSIsInByZXZlbnREZWZhdWx0IiwicG9wdXBJbWFnZSIsInZhbGlkYXRpb25EYXRhIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lckVsZW1lbnQiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJVc2VySW5mbyIsInByb2ZpbGVUaXRsZVNlbGVjdG9yIiwicHJvZmlsZVN1YnRpdGxlU2VsZWN0b3IiLCJfcHJvZmlsZVRpdGxlU2VsZWN0b3IiLCJfcHJvZmlsZVN1YnRpdGxlU2VsZWN0b3IiLCJfcHJvZmlsZVRpdGxlIiwiX3Byb2ZpbGVTdWJ0aXRsZSIsIl91c2VyRGF0YSIsIm5hbWVEYXRhIiwiaW5mb0RhdGEiLCJpbmZvIiwidGVtcGxhdGVTZWxlY3RvciIsImFkZEVsZW1lbnRGb3JtIiwiaW5wdXROYW1lIiwiaW5wdXRMaW5rIiwiZWRpdFByb2ZpbGVGb3JtIiwiYWRkQ2FyZEZvcm0iLCJ2YWxpZGF0b3JQcm9maWxlIiwiRm9ybVZhbGlkYXRvciIsInZhbGlkYXRvclBsYWNlIiwiZW5hYmxlVmFsaWRhdGlvbiIsImVsZW1lbnRzTGlzdCIsIkNhcmRMaXN0IiwiU2VjdGlvbiIsImNhcmQiLCJDYXJkIiwicmVuZGVyIiwiYWRkSXRlbSIsInJlbmRlcmVySXRlbXMiLCJwb3B1cEdhbGxlcnkiLCJvcGVuIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJwcm9maWxlSW5mbyIsInBvcHVwUHJvZmlsZSIsInNldFVzZXJJbmZvIiwicG9wdXBQcm9maWxlT3BlbkJ1dHRvbiIsImdldFVzZXJJbmZvIiwicG9wdXBBZGRDYXJkIiwidXNlckNhcmQiXSwibWFwcGluZ3MiOiJ5TEEwQ0EsUSxXQXpDRSxXQUFZQSxHQUFlLEksSUFBQSxRLDRGQUFBLFMsRUFRVCxTQUFDQyxHQUNqQixHQUFnQixXQUFaQSxFQUFJQyxJQUFrQixDQUN4QixJQUFNQyxFQUFTQyxTQUFTQyxjQUFjLGtCQUN0QyxFQUFLQyxNQUFNSCxNLEVBWFksMEIsc0JBQUEsSyx1REFBQSxLLEtBQ3pCSSxLQUFLQyxlQUFpQlIsRUFFdEJPLEtBQUtFLE9BQVNMLFNBQVNDLGNBQWNMLEcsb0RBYXJDTyxLQUFLRSxPQUFPQyxVQUFVQyxJQUFJLGlCQUMxQlAsU0FBU1EsaUJBQWlCLFVBQVdMLEtBQUtNLG1CLDhCQUkxQ04sS0FBS0UsT0FBT0MsVUFBVUksT0FBTyxpQkFDN0JWLFNBQVNXLG9CQUFvQixVQUFXUixLQUFLTSxtQiwwQ0FLM0IsV0FDbEJOLEtBQUtFLE9BQ0ZKLGNBQWMseUJBQ2RPLGlCQUFpQixTQUFTLFdBQ3pCLEVBQUtOLFdBRVRDLEtBQUtFLE9BQ0ZKLGNBQWMsb0JBQ2RPLGlCQUFpQixTQUFTLFdBQ3pCLEVBQUtOLGdCLHdtQ0NuQ1FVLEUsa3BCQUNuQixXQUFZaEIsRUFBZWlCLEdBQVksYSw0RkFBQSxVQUNyQyxjQUFNakIsSUFDRGtCLFlBQWNELEVBQ25CLEVBQUtFLFFBQVVDLE1BQU1DLEtBQUssRUFBS1osT0FBT2EsaUJBQWlCLG1CQUhsQixFLHVEQU1yQixXQUtoQixPQUpBZixLQUFLZ0IsUUFBVSxHQUNmaEIsS0FBS1ksUUFBUUssU0FBUSxTQUFDQyxHQUNwQixFQUFLRixRQUFRRSxFQUFNQyxNQUFRRCxFQUFNRSxTQUU1QnBCLEtBQUtnQixVLDBDQUlaLHNEQUNBaEIsS0FBS3FCLGFBQWVyQixLQUFLRSxPQUFPSixjQUFjLHNCQUU5Q0UsS0FBS0UsT0FBT0csaUJBQWlCLFNBQVVMLEtBQUtXLGUsOEJBRzVDLDBDQUNBWCxLQUFLcUIsYUFBYUMsYSxvQkF2QnFCQyxHLGtsQ0NEdEJDLEUsa3BCQUNuQixXQUFZL0IsR0FBZSxhLDRGQUFBLFVBQ3pCLGNBQU1BLElBQ0RnQyxxQkFBdUIsRUFBS3ZCLE9BQU9KLGNBQ3RDLGdDQUVGLEVBQUs0QixZQUFjLEVBQUt4QixPQUFPSixjQUFjLHdCQUxwQixFLDBDQU90QjZCLEVBQU9DLEdBQ1YseUNBRUE1QixLQUFLeUIscUJBQXFCSSxJQUFNRixFQUNoQzNCLEtBQUt5QixxQkFBcUJLLElBQU1GLEVBQ2hDNUIsS0FBSzBCLFlBQVlLLFlBQWNILE8sb0JBYlNMLEcsc0tDeUQ1QyxRLFdBekRFLFdBQVlTLEVBQVVDLEVBQWNDLEksNEZBQWlCLFNBQ25EbEMsS0FBS21DLE9BQVNILEVBQVNJLEtBQ3ZCcEMsS0FBS3FDLE1BQVFMLEVBQVNiLEtBQ3RCbkIsS0FBS3NDLGNBQWdCTCxFQUNyQmpDLEtBQUt1QyxpQkFBbUJMLEUsNERBUXhCLE9BSm9CckMsU0FDakJDLGNBQWNFLEtBQUtzQyxlQUNuQkUsUUFBUTFDLGNBQWMsWUFDdEIyQyxXQUFVLEssK0JBY2IsT0FUQXpDLEtBQUswQyxTQUFXMUMsS0FBSzJDLGVBQ3JCM0MsS0FBSzRDLFdBQWE1QyxLQUFLMEMsU0FBUzVDLGNBQWMsbUJBQzlDRSxLQUFLNkMsV0FBYTdDLEtBQUswQyxTQUFTNUMsY0FBYyxtQkFFOUNFLEtBQUs0QyxXQUFXZixJQUFNN0IsS0FBS21DLE9BQzNCbkMsS0FBSzRDLFdBQVdkLElBQU05QixLQUFLbUMsT0FDM0JuQyxLQUFLNkMsV0FBV2QsWUFBYy9CLEtBQUtxQyxNQUVuQ3JDLEtBQUs4QyxxQkFDRTlDLEtBQUswQyxXLG9DQUlaMUMsS0FBSzBDLFNBQ0Y1QyxjQUFjLHlCQUNkSyxVQUFVNEMsT0FBTyxrQyxvQ0FJcEIvQyxLQUFLMEMsU0FBU25DLFNBQ2RQLEtBQUswQyxTQUFXLE8sMkNBR0ksV0FDcEIxQyxLQUFLMEMsU0FDRjVDLGNBQWMsMkJBQ2RPLGlCQUFpQixTQUFTLFNBQUNYLEdBQzFCLEVBQUtzRCxZQUFZdEQsRUFBSUUsV0FHekJJLEtBQUswQyxTQUNGNUMsY0FBYyx5QkFDZE8saUJBQWlCLFNBQVMsU0FBQ1gsR0FDMUIsRUFBS3VELFlBQVl2RCxFQUFJRSxPQUFPc0QsUUFBUSw2QkFHeENsRCxLQUFLNEMsV0FBV3ZDLGlCQUFpQixTQUFTLFdBQ3hDLEVBQUtrQyxpQkFBaUIsRUFBS0osT0FBUSxFQUFLRSxlLDRMQ3FCOUMsUSxXQTFFRSxXQUFZYyxFQUFRQyxJLDRGQUFhLFNBQy9CcEQsS0FBS3FELGNBQWdCRixFQUFPRyxhQUM1QnRELEtBQUt1RCxlQUFpQkosRUFBT0ssY0FDN0J4RCxLQUFLeUQsc0JBQXdCTixFQUFPTyxxQkFDcEMxRCxLQUFLMkQscUJBQXVCUixFQUFPUyxvQkFDbkM1RCxLQUFLNkQsaUJBQW1CVixFQUFPVyxnQkFDL0I5RCxLQUFLK0QsWUFBY1osRUFBT2EsV0FDMUJoRSxLQUFLcUIsYUFBZStCLEUsNkRBR0phLEVBQWNDLEdBQzlCLElBQU1DLEVBQWVuRSxLQUFLcUIsYUFBYXZCLGNBQWxCLFdBQ2ZtRSxFQUFhRyxHQURFLFdBR3JCSCxFQUFhOUQsVUFBVUMsSUFBSUosS0FBSzZELGtCQUNoQ00sRUFBYXBDLFlBQWNtQyxFQUMzQkMsRUFBYWhFLFVBQVVDLElBQUlKLEtBQUsrRCxlLHNDQUdqQkUsR0FDZixJQUFNRSxFQUFlbkUsS0FBS3FCLGFBQWF2QixjQUFsQixXQUNmbUUsRUFBYUcsR0FERSxXQUdyQkgsRUFBYTlELFVBQVVJLE9BQU9QLEtBQUs2RCxrQkFDbkNNLEVBQWFoRSxVQUFVSSxPQUFPUCxLQUFLK0QsYUFDbkNJLEVBQWFwQyxZQUFjLEssMENBR1BrQyxHQUNmQSxFQUFhSSxTQUFTQyxNQUd6QnRFLEtBQUt1RSxnQkFBZ0JOLEdBRnJCakUsS0FBS3dFLGdCQUFnQlAsRUFBY0EsRUFBYVEscUIsMkNBTTVCLFdBQ2hCQyxFQUFZN0QsTUFBTUMsS0FDdEJkLEtBQUtxQixhQUFhTixpQkFBaUJmLEtBQUt1RCxpQkFFcENvQixFQUFnQjNFLEtBQUtxQixhQUFhdkIsY0FDdENFLEtBQUt5RCx1QkFFUHpELEtBQUs0RSxtQkFBbUJGLEVBQVdDLEdBRW5DRCxFQUFVekQsU0FBUSxTQUFDZ0QsR0FDakJBLEVBQWE1RCxpQkFBaUIsU0FBUyxXQUNyQyxFQUFLd0Usb0JBQW9CWixHQUN6QixFQUFLVyxtQkFBbUJGLEVBQVdDLFcseUNBS3JCRCxFQUFXQyxHQUN6QjNFLEtBQUs4RSxpQkFBaUJKLEdBQ3hCQyxFQUFjeEUsVUFBVUMsSUFBSUosS0FBSzJELHNCQUVqQ2dCLEVBQWN4RSxVQUFVSSxPQUFPUCxLQUFLMkQsd0IsdUNBSXJCZSxHQUNqQixPQUFPQSxFQUFVSyxNQUFLLFNBQUNkLEdBQ3JCLE9BQVFBLEVBQWFJLFNBQVNDLFcseUNBS2hDdEUsS0FBS3FCLGFBQWFoQixpQkFBaUIsVUFBVSxTQUFVWCxHQUNyREEsRUFBSXNGLG9CQUVOaEYsS0FBSzhDLDBCLHNCQ3hFRixJQUVNbUMsRUFBYXBGLFNBQVNDLGNBQWMsc0JBbUNwQ29GLEdBakNhRCxFQUFXbkYsY0FBYyx3QkFFaEJtRixFQUFXbkYsY0FDNUMsZ0NBOEI0QixDQUM1QndELGFBQWMscUJBQ2RFLGNBQWUsaUJBQ2ZFLHFCQUFzQix5QkFDdEJFLG9CQUFxQixzQ0FDckJFLGdCQUFpQiwyQkFDakJFLFdBQVksc0Msc0tDdkJkLFEsV0FuQkksYUFBNkJtQixHQUFrQixJQUFsQ0MsRUFBa0MsRUFBbENBLE1BQU1DLEVBQTRCLEVBQTVCQSxVLDRGQUE0QixTQUMzQ3JGLEtBQUtzRixPQUFTRixFQUNkcEYsS0FBS3VGLFVBQVlGLEVBQ2pCckYsS0FBS3dGLGtCQUFvQjNGLFNBQVNDLGNBQWNxRixHLDZEQUd4QyxXQUNoQm5GLEtBQUtzRixPQUFPckUsU0FBUSxTQUFDd0UsR0FDakIsRUFBS0YsVUFBVUUsUSw4QkFLWEMsR0FDSjFGLEtBQUt3RixrQkFBa0JHLFFBQVFELFEsZ01DZmRFLEUsV0FDakIsY0FBMkQsSUFBOUNDLEVBQThDLEVBQTlDQSxxQkFBcUJDLEVBQXlCLEVBQXpCQSx5Qiw0RkFBeUIsU0FDdkQ5RixLQUFLK0Ysc0JBQXVCRixFQUM1QjdGLEtBQUtnRyx5QkFBMEJGLEVBQy9COUYsS0FBS2lHLGNBQWdCcEcsU0FBU0MsY0FBY0UsS0FBSytGLHVCQUNqRC9GLEtBQUtrRyxpQkFBbUJyRyxTQUFTQyxjQUFjRSxLQUFLZ0csMEIsMkRBU3hELE9BSkFoRyxLQUFLbUcsVUFBWSxDQUNiQyxTQUFVcEcsS0FBS2lHLGNBQWNsRSxZQUM3QnNFLFNBQVVyRyxLQUFLa0csaUJBQWlCbkUsYUFFNUIvQixLQUFLbUcsWSxxQ0FJTyxJQUFYaEYsRUFBVyxFQUFYQSxLQUFLbUYsRUFBTSxFQUFOQSxLQUNkdEcsS0FBS2lHLGNBQWNsRSxZQUFjWixFQUFLQyxNQUN0Q3BCLEtBQUtrRyxpQkFBaUJuRSxZQUFjdUUsRUFBS2xGLFcsc0JDUHZDbUYsRUFBbUIsb0JBQ25CQyxFQUFpQjNHLFNBQVNDLGNBQWMsK0JBQ3hDMkcsRUFBWUQsRUFBZTFHLGNBQWMsNEJBQ3pDNEcsRUFBWUYsRUFBZTFHLGNBQy9CLGtDQUVJNkcsRUFBa0I5RyxTQUFTQyxjQUMvQixtQ0FFSThHLEVBQWMvRyxTQUFTQyxjQUFjLCtCQUVyQytHLEVBQW1CLElBQUlDLEVBQWM1QixFQUFnQnlCLEdBQ3JESSxFQUFpQixJQUFJRCxFQUFjNUIsRUFBZ0IwQixHQUN6REMsRUFBaUJHLG1CQUNqQkQsRUFBZUMsbUJBRWYsSUFBTUMsRUFBZXBILFNBQVNDLGNBQWMsYUFDdENvSCxFQUFXLElBQUlDLEVBQ25CLENBQ0UvQixNSHRCd0IsQ0FDMUIsQ0FDRWpFLEtBQU0sT0FDTmlCLEtBQU0sOEVBRVIsQ0FDRWpCLEtBQU0sU0FDTmlCLEtBQU0sOEVBRVIsQ0FDRWpCLEtBQU0sV0FDTmlCLEtBQU0sOEVBRVIsQ0FDRWpCLEtBQU0sU0FDTmlCLEtBQU0sOEVBRVIsQ0FDRWpCLEtBQU0sWUFDTmlCLEtBQU0sOEVBRVIsQ0FDRWpCLEtBQU0sWUFDTmlCLEtBQU0sK0VHQU5pRCxTQUFVLFNBQUNLLEdBQ1QsSUFBTTBCLEVBQU8sSUFBSUMsRUFDZjNCLEVBQ0FhLEVBQ0FyRSxHQUNBb0YsU0FDRkosRUFBU0ssUUFBUUgsS0FHckIsYUFFRkYsRUFBU00sZ0JBR1QsSUFBTUMsRUFBZSxJQUFJakcsRUFBZSxzQkFFeEMsU0FBU1UsRUFBZ0JQLEVBQU9DLEdBQzlCNkYsRUFBYUMsS0FBSy9GLEVBQU9DLEdBRjNCNkYsRUFBYUUsb0JBTWIsSUFLTUMsRUFBYyxJQUFJaEMsRUFMSixDQUNsQkMscUJBQXNCLGtCQUN0QkMsd0JBQXlCLHVCQUlyQjNFLEVBQU90QixTQUFTQyxjQUFjLDRCQUM5QndHLEVBQU96RyxTQUFTQyxjQUFjLG1DQUc5QitILEVBQWUsSUFBSXBILEVBREQsbUJBQ2dDLFdBQ3REbUgsRUFBWUUsWUFBWSxDQUFFM0csT0FBTW1GLFNBRWhDdUIsRUFBYTlILFdBRVRnSSxFQUF5QmxJLFNBQVNDLGNBQWMseUJBQ3REK0gsRUFBYUYsb0JBQ2JJLEVBQXVCMUgsaUJBQWlCLFNBQVMsV0FHL0NjLEVBQUtDLE1BQVF3RyxFQUFZSSxjQUFjNUIsU0FDdkNFLEVBQUtsRixNQUFRd0csRUFBWUksY0FBYzNCLFNBSXZDd0IsRUFBYUgsVUFJZixJQUNNTyxFQUFlLElBQUl4SCxFQURKLGlCQUNnQyxXQUNuRCxJQUFNeUgsRUFBVyxDQUNmL0csS0FBTXNGLEVBQVVyRixNQUNoQmdCLEtBQU1zRSxFQUFVdEYsT0FHWmdHLEVBQU8sSUFBSUMsRUFBS2EsRUFBVTNCLEVBQWtCckUsR0FDbEQrRSxFQUFhdEIsUUFBUXlCLEVBQUtFLFVBQzFCVyxFQUFhbEksV0FFZmtJLEVBQWFOLG9CQUNrQjlILFNBQVNDLGNBQWMsd0JBRS9CTyxpQkFBaUIsU0FBUyxXQUMvQzRILEVBQWFQLFciLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xuXG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuXG4gIFxuICAgIFxuICB9XG4gIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3AtdXBfb3BlbmVkXCIpO1xuICAgICAgdGhpcy5jbG9zZSh0YXJnZXQpO1xuICAgIH1cbiAgfVxuIFxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3AtdXBfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3AtdXBfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG5cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wLXVwX19jbG9zZS1idXR0b25cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9KTtcbiAgICB0aGlzLl9wb3B1cFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wLXVwX19vdmVybGF5XCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXA7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvciwgc3VibWl0Rm9ybSkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3N1Ym1pdEZvcm0gPSBzdWJtaXRGb3JtO1xuICAgIHRoaXMuX2lucHV0cyA9IEFycmF5LmZyb20odGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvckFsbChcIi5wb3AtdXBfX2lucHV0XCIpKTtcbiAgfVxuXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcbiAgICB0aGlzLl92YWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIHRoaXMuX3ZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl92YWx1ZXM7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcC11cF9fY29udGFpbmVyJykgO1xuXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLl9zdWJtaXRGb3JtKTtcbiAgfVxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7XG4gICBcbiAgXG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9wb3B1cEltYWdlQ29udGFpbmVyID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLnBvcC11cF9jb250YWluZXJfdHlwZV9pbWFnZVwiXG4gICAgKTtcbiAgICB0aGlzLl9wb3B1cFRpdGxlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3AtdXBfX2ltYWdlLXRpdGxlXCIpO1xuICB9XG4gIG9wZW4oaW1hZ2UsIHRleHQpIHtcbiAgICBzdXBlci5vcGVuKCk7XG5cbiAgICB0aGlzLl9wb3B1cEltYWdlQ29udGFpbmVyLnNyYyA9IGltYWdlO1xuICAgIHRoaXMuX3BvcHVwSW1hZ2VDb250YWluZXIuYWx0ID0gdGV4dDtcbiAgICB0aGlzLl9wb3B1cFRpdGxlLnRleHRDb250ZW50ID0gdGV4dDtcbiAgfVxufVxuIiwiY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKENhcmREYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaykge1xuICAgIHRoaXMuX2ltYWdlID0gQ2FyZERhdGEubGluaztcbiAgICB0aGlzLl90ZXh0ID0gQ2FyZERhdGEubmFtZTtcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICByZW5kZXIgKCl7XG4gICAgdGhpcy5fbmV3Q2FyZCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fbmV3Q2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2NhcmRUaXRsZSA9IHRoaXMuX25ld0NhcmQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X190aXRsZVwiKTtcblxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9pbWFnZTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5faW1hZ2U7XG4gICAgdGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fdGV4dDtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgcmV0dXJuIHRoaXMuX25ld0NhcmQ7XG4gIH07XG5cbiAgX3RvZ2dsZUxpa2UoKXtcbiAgICB0aGlzLl9uZXdDYXJkXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlLWJ1dHRvblwiKVxuICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJlbGVtZW50X19saWtlLWJ1dHRvbl9jbGlja2VkXCIpO1xuICB9O1xuXG4gIF9kZWxldGVDYXJkICgpIHtcbiAgICB0aGlzLl9uZXdDYXJkLnJlbW92ZSgpO1xuICAgIHRoaXMuX25ld0NhcmQgPSBudWxsO1xuICB9O1xuXG4gIF9zZXRFdmVudExpc3RlbmVycyAoKSB7XG4gICAgdGhpcy5fbmV3Q2FyZFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fZGVsZXRlLWJ1dHRvblwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICAgIHRoaXMuX2RlbGV0ZUNhcmQoZXZ0LnRhcmdldCk7XG4gICAgICB9KTtcblxuICAgIHRoaXMuX25ld0NhcmRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2xpa2UtYnV0dG9uXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgICAgICAgdGhpcy5fdG9nZ2xlTGlrZShldnQudGFyZ2V0LmNsb3Nlc3QoXCIuZWxlbWVudF9fbGlrZS1idXR0b25cIikpO1xuICAgICAgfSk7XG5cbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9pbWFnZSwgdGhpcy5fdGV4dCk7XG4gICAgfSk7XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCBDYXJkO1xuIiwiIGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihvYmplY3QsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gb2JqZWN0LmZvcm1TZWxlY3RvcjtcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gb2JqZWN0LmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBvYmplY3Quc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IG9iamVjdC5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IG9iamVjdC5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IG9iamVjdC5lcnJvckNsYXNzO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IgIChpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9O1xuXG4gIF9oaWRlSW5wdXRFcnJvciAoaW5wdXRFbGVtZW50KSAge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfTtcblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5ICAoaW5wdXRFbGVtZW50KSAge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9O1xuXG4gIF9zZXRFdmVudExpc3RlbmVycyAgKCkgIHtcbiAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxuICAgICk7XG4gICAgY29uc3QgYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KTtcblxuICAgIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSAoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KSAge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xuICAgICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgfVxuICB9O1xuXG4gIF9oYXNJbnZhbGlkSW5wdXQgIChpbnB1dExpc3QpICB7XG4gICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xuICAgIH0pO1xuICB9O1xuXG4gIGVuYWJsZVZhbGlkYXRpb24gICgpICB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9O1xufVxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjsiLCJleHBvcnQgY29uc3QgRVNDX0tFWUNPREUgPSAyNztcblxuZXhwb3J0IGNvbnN0IHBvcHVwSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcC11cF90eXBlX2ltYWdlXCIpO1xuXG5leHBvcnQgY29uc3QgcG9wdXBUaXRsZSA9IHBvcHVwSW1hZ2UucXVlcnlTZWxlY3RvcihcIi5wb3AtdXBfX2ltYWdlLXRpdGxlXCIpO1xuXG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZUNvbnRhaW5lciA9IHBvcHVwSW1hZ2UucXVlcnlTZWxlY3RvcihcbiAgXCIucG9wLXVwX2NvbnRhaW5lcl90eXBlX2ltYWdlXCJcbik7XG5cbmV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXG4gIHtcbiAgICBuYW1lOiBcItCR0LDQu9C4XCIsXG4gICAgbGluazogXCJodHRwczovL2Nkbi5waXhhYmF5LmNvbS9waG90by8yMDIwLzEwLzA5LzIwLzA5L2xpYnJhcnktNTY0MTM4OV85NjBfNzIwLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCLQmtC10L3QuNGPIFwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jZG4ucGl4YWJheS5jb20vcGhvdG8vMjAyMC8xMC8wOS8yMC8wOS9saWJyYXJ5LTU2NDEzODlfOTYwXzcyMC5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0JvQuNGB0YHQsNCx0L7QvVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jZG4ucGl4YWJheS5jb20vcGhvdG8vMjAyMC8xMC8wOS8yMC8wOS9saWJyYXJ5LTU2NDEzODlfOTYwXzcyMC5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0J3QtdCy0LDQtNCwXCIsXG4gICAgbGluazogXCJodHRwczovL2Nkbi5waXhhYmF5LmNvbS9waG90by8yMDIwLzEwLzA5LzIwLzA5L2xpYnJhcnktNTY0MTM4OV85NjBfNzIwLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCLQodC40YDQsNC60YPQt9GLIFwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jZG4ucGl4YWJheS5jb20vcGhvdG8vMjAyMC8xMC8wOS8yMC8wOS9saWJyYXJ5LTU2NDEzODlfOTYwXzcyMC5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0KHRgtC+0LrQs9C+0LvRjNC8XCIsXG4gICAgbGluazogXCJodHRwczovL2Nkbi5waXhhYmF5LmNvbS9waG90by8yMDIwLzEwLzA5LzIwLzA5L2xpYnJhcnktNTY0MTM4OV85NjBfNzIwLmpwZ1wiLFxuICB9LFxuXTtcblxuZXhwb3J0IGNvbnN0IHZhbGlkYXRpb25EYXRhID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcC11cF9fY29udGFpbmVyXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcC11cF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcC11cF9fc3VibWl0LWJ1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcC11cF9fc3VibWl0LWJ1dHRvbl90eXBlX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3AtdXBfX2lucHV0X3R5cGVfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJwb3AtdXBfX2Vycm9yX2VsZW1lbnRfdHlwZV9hY3RpdmVcIixcbn07XG5cbiIsIiAgY2xhc3MgU2VjdGlvbiB7XG4gICAgY29uc3RydWN0b3Ioe2l0ZW1zLHJlbmRlcmVyfSxjb250YWluZXJTZWxlY3Rvcil7XG4gICAgICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgICB9XG4vL9C80LXRgtC+0LQg0L7RgtGA0LjRgdC+0LLQutC4INCy0YHQtdGFINGN0LvQtdC80LXQvdGC0L7QslxucmVuZGVyZXJJdGVtcygpIHtcbnRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICB0aGlzLl9yZW5kZXJlcihpdGVtKVxuICAgIFxufSk7XG59XG5cbmFkZEl0ZW0oZWxlbWVudCl7XG4gICAgdGhpcy5fY29udGFpbmVyRWxlbWVudC5wcmVwZW5kKGVsZW1lbnQpXG59XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2VjdGlvbjsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mb3tcbiAgICBjb25zdHJ1Y3Rvcih7cHJvZmlsZVRpdGxlU2VsZWN0b3IscHJvZmlsZVN1YnRpdGxlU2VsZWN0b3J9KXtcbiAgICAgICAgdGhpcy5fcHJvZmlsZVRpdGxlU2VsZWN0b3I9IHByb2ZpbGVUaXRsZVNlbGVjdG9yXG4gICAgICAgIHRoaXMuX3Byb2ZpbGVTdWJ0aXRsZVNlbGVjdG9yPSBwcm9maWxlU3VidGl0bGVTZWxlY3RvclxuICAgICAgICB0aGlzLl9wcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3Byb2ZpbGVUaXRsZVNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5fcHJvZmlsZVN1YnRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9wcm9maWxlU3VidGl0bGVTZWxlY3Rvcik7XG5cbiAgICB9XG5cbmdldFVzZXJJbmZvKCl7XG4gICAgdGhpcy5fdXNlckRhdGEgPSB7ICAgIFxuICAgICAgICBuYW1lRGF0YTogdGhpcy5fcHJvZmlsZVRpdGxlLnRleHRDb250ZW50LFxuICAgICAgICBpbmZvRGF0YTogdGhpcy5fcHJvZmlsZVN1YnRpdGxlLnRleHRDb250ZW50XG4gICAgfVxuICAgIHJldHVybiAgdGhpcy5fdXNlckRhdGFcbiAgIFxufVxuXG5zZXRVc2VySW5mbyh7bmFtZSxpbmZvfSl7XG4gICAgdGhpcy5fcHJvZmlsZVRpdGxlLnRleHRDb250ZW50ID0gbmFtZS52YWx1ZVxuICAgIHRoaXMuX3Byb2ZpbGVTdWJ0aXRsZS50ZXh0Q29udGVudCA9IGluZm8udmFsdWVcbn1cbn0iLCIvLyB2YXIgSHRtbFdlYnBhY2tQbHVnaW4gPSByZXF1aXJlKCdodG1sLXdlYnBhY2stcGx1Z2luJyk7dmFyIEh0bWxXZWJwYWNrUGx1Z2luID0gcmVxdWlyZSgnaHRtbC13ZWJwYWNrLXBsdWdpbicpO1xuaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7IHZhbGlkYXRpb25EYXRhIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvdXRpbHMuanNcIjtcbmltcG9ydCB7IGluaXRpYWxDYXJkcyB9IGZyb20gXCIuLi9jb21wb25lbnRzL3V0aWxzLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcblxuXG5cbmNvbnN0IHRlbXBsYXRlU2VsZWN0b3IgPSBcIi50ZW1wbGF0ZS1lbGVtZW50XCI7XG5jb25zdCBhZGRFbGVtZW50Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wLXVwX19mb3JtX3R5cGVfYWRkLWNhcmRcIik7XG5jb25zdCBpbnB1dE5hbWUgPSBhZGRFbGVtZW50Rm9ybS5xdWVyeVNlbGVjdG9yKFwiLnBvcC11cF9faW5wdXRfdHlwZV9uYW1lXCIpO1xuY29uc3QgaW5wdXRMaW5rID0gYWRkRWxlbWVudEZvcm0ucXVlcnlTZWxlY3RvcihcbiAgXCIucG9wLXVwX19pbnB1dF90eXBlX2ltYWdlLWxpbmtcIlxuKTtcbmNvbnN0IGVkaXRQcm9maWxlRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnBvcC11cF9fZm9ybV90eXBlX2VkaXQtcHJvZmlsZVwiXG4pO1xuY29uc3QgYWRkQ2FyZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcC11cF9fZm9ybV90eXBlX2FkZC1jYXJkXCIpO1xuLy/QstCw0LvQuNC00LDRhtC40Y9cbmNvbnN0IHZhbGlkYXRvclByb2ZpbGUgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uRGF0YSwgZWRpdFByb2ZpbGVGb3JtKTtcbmNvbnN0IHZhbGlkYXRvclBsYWNlID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkRhdGEsIGFkZENhcmRGb3JtKTtcbnZhbGlkYXRvclByb2ZpbGUuZW5hYmxlVmFsaWRhdGlvbigpO1xudmFsaWRhdG9yUGxhY2UuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5jb25zdCBlbGVtZW50c0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzXCIpO1xuY29uc3QgQ2FyZExpc3QgPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXG4gICAgcmVuZGVyZXI6IChlbGVtZW50KSA9PiB7XG4gICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoXG4gICAgICAgIGVsZW1lbnQsXG4gICAgICAgIHRlbXBsYXRlU2VsZWN0b3IsXG4gICAgICAgIGhhbmRsZUNhcmRDbGlja1xuICAgICAgKS5yZW5kZXIoKTtcbiAgICAgIENhcmRMaXN0LmFkZEl0ZW0oY2FyZCk7XG4gICAgfSxcbiAgfSxcbiAgXCIuZWxlbWVudHNcIlxuKTtcbkNhcmRMaXN0LnJlbmRlcmVySXRlbXMoKTtcblxuLy/Qv9C+0L/QsNC/INCz0LDQu9C10YDQtdC4XG5jb25zdCBwb3B1cEdhbGxlcnkgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIucG9wLXVwX3R5cGVfaW1hZ2VcIik7XG5wb3B1cEdhbGxlcnkuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmZ1bmN0aW9uIGhhbmRsZUNhcmRDbGljayhpbWFnZSwgdGV4dCkge1xuICBwb3B1cEdhbGxlcnkub3BlbihpbWFnZSwgdGV4dCk7XG59XG5cbi8v0KHQvtC30LTQsNC90LjQtSDQv9C+0L/QsNC/0LAg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRj1xuY29uc3QgcHJvZmlsZURhdGEgPSB7XG4gIHByb2ZpbGVUaXRsZVNlbGVjdG9yOiBcIi5wcm9maWxlX190aXRsZVwiLFxuICBwcm9maWxlU3VidGl0bGVTZWxlY3RvcjogXCIucHJvZmlsZV9fc3VidGl0bGVcIixcbn07XG5cbmNvbnN0IHByb2ZpbGVJbmZvID0gbmV3IFVzZXJJbmZvKHByb2ZpbGVEYXRhKTtcbmNvbnN0IG5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcC11cF9faW5wdXRfdHlwZV9uYW1lXCIpO1xuY29uc3QgaW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wLXVwX19pbnB1dF90eXBlX2Rlc2NyaXB0aW9uXCIpO1xuXG5jb25zdCBwcm9maWxlU2VsZWN0b3IgPSBcIi5wb3AtdXAtcHJvZmlsZVwiO1xuY29uc3QgcG9wdXBQcm9maWxlID0gbmV3IFBvcHVwV2l0aEZvcm0ocHJvZmlsZVNlbGVjdG9yLCAoKSA9PiB7XG4gIHByb2ZpbGVJbmZvLnNldFVzZXJJbmZvKHsgbmFtZSwgaW5mbyB9KTtcblxuICBwb3B1cFByb2ZpbGUuY2xvc2UoKTtcbn0pO1xuY29uc3QgcG9wdXBQcm9maWxlT3BlbkJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XG5wb3B1cFByb2ZpbGUuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnBvcHVwUHJvZmlsZU9wZW5CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgLy8gIHByb2ZpbGVJbmZvLmdldFVzZXJJbmZvKClcblxuICBuYW1lLnZhbHVlID0gcHJvZmlsZUluZm8uZ2V0VXNlckluZm8oKS5uYW1lRGF0YTtcbiAgaW5mby52YWx1ZSA9IHByb2ZpbGVJbmZvLmdldFVzZXJJbmZvKCkuaW5mb0RhdGE7XG5cbiAgLy9cblxuICBwb3B1cFByb2ZpbGUub3BlbigpO1xufSk7XG5cbi8v0KHQvtC30LTQsNC90LjQtSDQv9C+0L/QsNC/0LAg0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuY29uc3QgQ2FyZFNlbGVjdG9yID0gXCIucG9wLXVwLXBsYWNlXCI7XG5jb25zdCBwb3B1cEFkZENhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybShDYXJkU2VsZWN0b3IsICgpID0+IHtcbiAgY29uc3QgdXNlckNhcmQgPSB7XG4gICAgbmFtZTogaW5wdXROYW1lLnZhbHVlLFxuICAgIGxpbms6IGlucHV0TGluay52YWx1ZSxcbiAgfTtcbiAgLy/QtNC+0LHQsNCy0LvQtdC90LjQtSDQutCw0YDRgtGLXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZCh1c2VyQ2FyZCwgdGVtcGxhdGVTZWxlY3RvciwgaGFuZGxlQ2FyZENsaWNrKTtcbiAgZWxlbWVudHNMaXN0LnByZXBlbmQoY2FyZC5yZW5kZXIoKSk7XG4gIHBvcHVwQWRkQ2FyZC5jbG9zZSgpO1xufSk7XG5wb3B1cEFkZENhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmNvbnN0IHBvcHVwQWRkQ2FyZE9wZW5CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XG5cbnBvcHVwQWRkQ2FyZE9wZW5CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgcG9wdXBBZGRDYXJkLm9wZW4oKTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==